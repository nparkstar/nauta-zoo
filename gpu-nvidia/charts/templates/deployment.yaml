apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ template "name" . }}
    chart: {{ template "chart_version" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    runName: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
      runName: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        buildID: {{ .Values.buildID }}
        scheduling.k8s.io/group-name: {{ .Release.Name }}-podgroup
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
        runName: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.clusterRepository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.JupyterPort }}
              name: "jupyter"
          env:
            - name: EXP_NAME
              value: "{{ .Values.experimentName }}"
            - name: RUN_NAME
              value: {{ .Release.Name }}
{{ if .Values.env }}
{{ toYaml .Values.env | indent 12 }}
{{ end }}
          command: ["init_jupyter"]
          volumeMounts:
            - name: input-home
              mountPath: /mnt/input/home
              readOnly: True
            - name: input-public
              mountPath: /mnt/input/root
              readOnly: True
            - name: output-home
              mountPath: /mnt/output/home
            - name: output-public
              mountPath: /mnt/output/root
              readOnly: True
            - name: output-public
              mountPath: /mnt/output/root/public
              subPath: public
            - name: input-public
              mountPath: /mnt/input/root/public
              subPath: public
            - name: output-home
              mountPath: /mnt/output/experiment
              subPath: {{ .Values.experimentName }}
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: {{ default .Values.resources.requests.cpu .Values.cpu}}
              memory: {{ default .Values.resources.requests.memory .Values.memory }}
              nvidia.com/gpu: {{ default .Values.resources.requests.gpu .Values.gpu}}
            limits:
              cpu: {{ default .Values.resources.limits.cpu .Values.cpu }}
              memory: {{ default .Values.resources.limits.memory .Values.memory }}
              nvidia.com/gpu: {{ default .Values.resources.limits.gpu .Values.gpu }}
      nodeSelector:
        gpu: {{ .Values.nodeSelector.gpu | quote }}
      restartPolicy: Always
      volumes:
        - name: input-home
          persistentVolumeClaim:
            claimName: input-home
        - name: input-public
          persistentVolumeClaim:
            claimName: input-public
        - name: output-home
          persistentVolumeClaim:
            claimName: output-home
        - name: output-public
          persistentVolumeClaim:
            claimName: output-public
      schedulerName: kube-batch
  backoffLimit: 5
