{{- $command_args := join " " $.Values.commandline.args -}}
apiVersion: kubeflow.org/v1alpha2
kind: TFJob
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ template "name" . }}
    chart: {{ template "chart_version" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    runName: {{ .Release.Name }}
spec:
  ttlSecondsAfterFinishing: 60
  tfReplicaSpecs:
    Master:
      restartPolicy: Never
      backoffLimit: 0
      replicas: 1
      template:
        metadata:
          annotations:
            buildID: {{ .Values.buildID }}
            scheduling.k8s.io/group-name: {{ .Release.Name }}-podgroup
          labels:
            app: {{ template "name" . }}
            release: {{ .Release.Name }}
            runName: {{ .Release.Name }}
        spec:
          containers:
            - name: tensorflow
              image: "{{ .Values.image.clusterRepository }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["/bin/bash", "-c", "python {{ $command_args }}"]
              ports:
                - containerPort: {{ .Values.TensorBoardPort }}
                  name: "tensorboard"
                - containerPort: {{ .Values.TensorIPythonPort }}
                  name: "ipython"
              env:
                - name: "RUN_NAME"
                  value: {{ .Release.Name }}
{{ if .Values.env }}
{{ toYaml .Values.env | indent 16 }}
{{ end }}
              volumeMounts:
                - name: input-home
                  mountPath: /mnt/input/home
                  readOnly: True
                - name: input-public
                  mountPath: /mnt/input/root
                  readOnly: True
                - name: output-home
                  mountPath: /mnt/output/home
                - name: output-public
                  mountPath: /mnt/output/root
                  readOnly: True
                - name: output-public
                  mountPath: /mnt/output/root/public
                  subPath: public
                - name: input-public
                  mountPath: /mnt/input/root/public
                  subPath: public
                - name: output-home
                  mountPath: /mnt/output/experiment
                  subPath: {{ .Release.Name }}
              securityContext:
                privileged: true
              resources:
                requests:
                  cpu: {{ default .Values.resources.requests.cpu .Values.cpu}}
                  memory: {{ default .Values.resources.requests.memory .Values.memory }}
                limits:
                  cpu: {{ default .Values.resources.limits.cpu .Values.cpu }}
                  memory: {{ default .Values.resources.limits.memory .Values.memory }}
          schedulerName: kube-batch
          volumes:
            - name: input-home
              persistentVolumeClaim:
                claimName: input-home
            - name: input-public
              persistentVolumeClaim:
                claimName: input-public
            - name: output-home
              persistentVolumeClaim:
                claimName: output-home
            - name: output-public
              persistentVolumeClaim:
                claimName: output-public
          initContainers:
            - name: init-experiment-pod
              image: "{{ .Values.image.clusterRepository }}"
              command: ['mkdir', '-p', '/mnt/output/home/{{ .Release.Name }}']
              volumeMounts:
                - name: output-home
                  mountPath: /mnt/output/home
